name: Deploy Application

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2  

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          region: eu-west-2

      - name: Ensure Repository Exists
        run: |
          aws ecr describe-repositories --repository-names chatbot --region $AWS_REGION || \
          aws ecr create-repository --repository-name chatbot --region $AWS_REGION

      - name: Build and Push Docker Image
        env:
          ECR_REGISTRY: 851725211248.dkr.ecr.<region>.amazonaws.com
          ECR_REPOSITORY: chatbot
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  sast:
    name: Security Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Bandit (Python Security Linter)
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit (Python Security Linter)
        run: bandit -r . --severity-level high --confidence-level high
      

  dast:
    name: Dynamic Application Security Testing (DAST)
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: OWASP ZAP Scan
        uses: zaproxy/action-full-scan@v0.5.0
        with:
          target: "http://example.com" # Replace with your deployed application URL
