name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build Docker image
        run: docker build -t your-docker-image-url .

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          region: us-west-2

      - name: Push Docker image to Amazon ECR
        run: |
          docker tag your-docker-image-url:latest ${{ secrets.ECR_REGISTRY }}/your-docker-image-url:latest
          docker push ${{ secrets.ECR_REGISTRY }}/your-docker-image-url:latest

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

  dast:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Run OWASP ZAP Baseline Scan
        run: |
          docker pull owasp/zap2docker-stable
          docker run -t owasp/zap2docker-stable zap-baseline.py -t http://your-instance-url -r zap_report.html

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v2
        with:
          name: zap-report
          path: zap_report.html

  iac-security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install tfsec
        run: |
          curl -L "$(curl -s https://api.github.com/repos/aquasecurity/tfsec/releases/latest | grep -o -E "https://.+?_linux_amd64.tar.gz")" > tfsec.tar.gz
          tar -xzf tfsec.tar.gz
          sudo mv tfsec /usr/local/bin/

      - name: Run tfsec
        run: tfsec .
